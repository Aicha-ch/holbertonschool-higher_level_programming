add_integer = __import__('0-add_integer').add_integer
>>> print(add_integer(1, 2))
3
>>> print(add_integer(100, -2))
98
>>> print(add_integer(100.3, -2))
98
>>> print(add_integer(100.3, -2))
98
>>> add_integer(4, "python")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 9, in add_integer
    raise TypeError("b must be an integer or float")
TypeError: b must be an integer or float
>>> add_integer(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 7, in add_integer
    raise TypeError("a must be an integer or float")
TypeError: a must be an integer or float
>>> add_integer(float('inf'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 11, in add_integer
    return int(a) + int(b)
OverflowError: cannot convert float infinity to integer
>>> add_integer(float('nan'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 11, in add_integer
    return int(a) + int(b)
ValueError: cannot convert float NaN to integer
